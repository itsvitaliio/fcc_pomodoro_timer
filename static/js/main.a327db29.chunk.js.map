{"version":3,"sources":["App.js","index.js"],"names":["counter","DEFAULT","sessionLength","breakLength","activity","current","timerOn","TimeController","props","id","label","toLowerCase","className","onClick","length","App","state","handleClick","bind","toggleTimer","resetTimer","e","newBreak","newSession","target","parentElement","this","setState","document","getElementById","innerHTML","clearInterval","setInterval","beeper","play","pause","currentTime","seconds","Math","floor","preload","ref","audio","src","React","Component","test","createElement","getElementsByTagName","appendChild","ReactDOM","render"],"mappings":"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","file":"static/js/main.a327db29.chunk.js","sourcesContent":["import React from 'react';\n\nconst DEFAULT = {\n    sessionLength: 25,\n    breakLength: 5,\n    activity: 'Session',\n    current: 1500,\n    timerOn: false\n}\n\n// const SESSION = {\n//     activity: 'Session',\n\n// }\n\nlet counter;\n\nconst mmssFormat = (seconds) => {\n    return (seconds < 600 ? '0' : '') + Math.floor(seconds / 60) + ':' + (seconds % 60 < 10 ? '0' : '') + seconds % 60;\n}\n\nconst TimeController = (props) => {\n    const id = props.label.toLowerCase();\n    return (\n        <div className='time-control'>\n            <div id={id + '-label'}>{props.label}</div>\n            <button id={id + '-increment'} onClick={props.onClick}><i className=\"fa fa-angle-up controlBtns\" aria-hidden=\"true\"></i></button>\n            <div id={id + '-length'}>{props.length}</div>\n            <button id={id + '-decrement'} onClick={props.onClick}><i className=\"fa fa-angle-down controlBtns\" aria-hidden=\"true\"></i></button>\n        </div>\n    )\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sessionLength: 25,\n            breakLength: 5,\n            activity: 'Session',\n            current: 1500,\n            timerOn: false\n        }\n        this.handleClick = this.handleClick.bind(this);\n        this.toggleTimer = this.toggleTimer.bind(this);\n        this.resetTimer = this.resetTimer.bind(this);\n    }\n\n    handleClick(e) {\n        // console.log(e.target.id || e.target.parentElement.id);\n        let newBreak, newSession;\n        // eslint-disable-next-line default-case\n        switch(e.target.id || e.target.parentElement.id){\n            case 'break-increment':\n                newBreak = this.state.breakLength >= 60 ? 60 : this.state.breakLength + 1;\n                this.setState(state => ({\n                    breakLength: newBreak,\n                    current: state.activity === 'Break' ? newBreak * 60 : state.current,\n                }));\n                break;\n            case 'break-decrement':\n                newBreak = this.state.breakLength <= 1 ? 1 : this.state.breakLength - 1;\n                this.setState(state => ({\n                    breakLength: newBreak,\n                    current: state.activity === 'Break' ? newBreak * 60 : state.current,\n                }));\n                break;\n            case 'session-increment':\n                newSession = this.state.sessionLength >= 60 ? 60 : this.state.sessionLength + 1;\n                this.setState(state => ({\n                    sessionLength: newSession,\n                    current: state.activity === 'Session' ? newSession * 60 : state.current,\n                }));\n                break;\n            case 'session-decrement':\n                newSession = this.state.sessionLength <= 1 ? 1 : this.state.sessionLength - 1;\n                this.setState(state => ({\n                    sessionLength: newSession,\n                    current: state.activity === 'Session' ? newSession * 60 : state.current,\n                }));\n                break;\n        }\n    }\n\n    toggleTimer() {\n        if(this.state.timerOn){\n            document.getElementById('start_stop').innerHTML = '<i class=\"fa fa-play\" aria-hidden=\"true\"></i>';\n            clearInterval(counter);\n            this.setState({\n                timerOn: false\n            });\n        }\n        else{\n            document.getElementById('start_stop').innerHTML = '<i class=\"fa fa-pause\" aria-hidden=\"true\"></i>';\n            this.setState({\n                timerOn: true\n            });\n\n            counter = setInterval(() => {\n                if(this.state.current <= 0){\n                    this.setState(state => ({\n                        activity: state.activity === 'Session' ? 'Break' : 'Session',\n                        current: (state.activity === 'Session' ? state.breakLength : state.sessionLength) * 60\n                    }));\n                    this.beeper.play();\n                }\n                else{\n                    //change color at less than 60\n                    // blinker at 15\n\n                    this.setState(state => ({\n                        current: state.current - 1\n                    }));\n                }\n            }, 1000);\n        }\n    }\n\n    resetTimer() {\n        this.beeper.pause();\n        this.beeper.currentTime = 0;\n        document.getElementById('start_stop').innerHTML = '<i class=\"fa fa-play\" aria-hidden=\"true\"></i>';\n        clearInterval(counter);\n        this.setState(DEFAULT);\n    }\n\n    render() {\n        return (\n            <div id=\"wrapper\">\n                <div id=\"title\">25 + 5 Clock</div>\n                <TimeController label={'Break'} length={this.state.breakLength} onClick={this.handleClick} />\n                <TimeController label={'Session'} length={this.state.sessionLength} onClick={this.handleClick} />\n                <div id=\"timer-wrapper\">\n                    <div id=\"timer-label\">{this.state.activity}</div>\n                    <div id=\"time-left\">{mmssFormat(this.state.current)}</div>\n                </div>\n                <button id=\"start_stop\" onClick={this.toggleTimer}><i className=\"fa fa-play controlBtns\" aria-hidden=\"true\"></i></button>\n                <button id=\"reset\" onClick={this.resetTimer}><i className=\"fa fa-refresh controlBtns\" aria-hidden=\"true\"></i></button>\n                <audio id=\"beep\" preload=\"auto\" ref={(audio) => {this.beeper = audio}} src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\" />\n            </div>\n        )\n    }\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App.js';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.css';\n\nconst test = document.createElement('script');\ntest.src = \"https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js\";\n\ndocument.getElementsByTagName('body')[0].appendChild(test);\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}